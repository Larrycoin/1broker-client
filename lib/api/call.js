'use strict';

// Generated by CoffeeScript 2.3.0
var details, request;

request = require('request');

details = require('../info/details');

module.exports = function (config, method, params, callback) {
  var key, url, value;
  // if only 3 arguments are sent assume the last one is the callback
  if (params && callback == null) {
    callback = params;
    params = null;
  }
  url = config.url + '/' + method + '.php?token=' + config.api_key;
  if (config.referral_id != null && !(params != null ? params.referral_id : void 0)) {
    url += '&referral_id=' + config.referral_id;
  }
  if ((params != null ? params.referral_id : void 0) != null) {
    url += '&referral_id=' + params.referral_id;
    // delete since we already used and we don't want the parameter
    // to be repeated once we build the parameters string
    delete params.referral_id;
  }
  if (config.pretty) {
    url += "&pretty=1";
  }
  if (params != null) {
    for (key in params) {
      value = params[key];
      //console.log "#{key}=#{value}"
      url += '&' + key + '=' + value;
    }
  }
  return request({
    url: url,
    strictSSL: config.strictSSL
  }, function (error, response, body) {
    var e, parsed;
    if (error) {
      return typeof callback === "function" ? callback(error) : void 0;
    }
    if (response.statusCode !== 200) {
      return typeof callback === "function" ? callback(response) : void 0;
    }
    try {
      parsed = JSON.parse(body);
    } catch (error1) {
      e = error1;
      console.log("1broker-client error parsing body as json, dumping body");
      console.log(body);
      return typeof callback === "function" ? callback(e) : void 0;
    }
    if (parsed.error) {
      return typeof callback === "function" ? callback(parsed) : void 0;
    }
    return typeof callback === "function" ? callback(null, parsed) : void 0;
  });
};