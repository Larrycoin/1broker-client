// Generated by CoffeeScript 1.11.1
var call;

call = require('../call');

module.exports = function(config, params, callback) {
  var is_percent, self, stop_loss, take_profit;
  stop_loss = params.stop_loss;
  take_profit = params.take_profit;
  params.leverage = params.leverage || 1;
  params.margin = params.margin || 0.01;
  is_percent = (stop_loss != null ? stop_loss.indexOf("%") : void 0) !== -1;
  is_percent = is_percent || (take_profit != null ? take_profit.indexOf("%") : void 0) !== -1;
  if (typeof params.leverage === 'string') {
    params.leverage = params.leverage.toUpperCase();
    if (['MAX', 'HALF', 'QUARTER'].indexOf(params.leverage) !== -1) {
      self = arguments.callee;
      return call(config, 'market/detail', params, function(error, details) {
        var max;
        if (error) {
          return typeof callback === "function" ? callback(error) : void 0;
        }
        details = details.response;
        max = Number(details.maximum_leverage);
        if (params.leverage === 'MAX') {
          params.leverage = max;
        }
        if (params.leverage === 'HALF') {
          params.leverage = Math.ceil(max / 2);
        }
        if (params.leverage === 'QUARTER') {
          params.leverage = Math.ceil(max / 4);
        }
        return self(config, params, callback);
      });
    }
  }
  if (!is_percent) {
    return call(config, 'order/create', params, callback);
  }
  if (params.order_type === 'Limit') {
    if (params.direction === 'short') {
      if (take_profit && take_profit.indexOf("%") !== -1) {
        take_profit = Number(take_profit.replace("%", ""));
        take_profit = 1 - (take_profit / 100 / params.leverage);
        take_profit = Number(params.order_type_parameter) * take_profit;
        params.take_profit = take_profit;
      }
      if (stop_loss && stop_loss.indexOf("%") !== -1) {
        stop_loss = Number(stop_loss.replace("%", ""));
        stop_loss = 1 + (stop_loss / 100 / params.leverage);
        stop_loss = Number(params.order_type_parameter) * stop_loss;
        stop_loss = Number(stop_loss.toFixed(6));
        params.stop_loss = stop_loss;
      }
    }
    if (params.direction === 'long') {
      if (take_profit && take_profit.indexOf("%") !== -1) {
        take_profit = Number(take_profit.replace("%", ""));
        take_profit = 1 + (take_profit / 100 / params.leverage);
        take_profit = Number(params.order_type_parameter) * take_profit;
        take_profit = Number(take_profit.toFixed(6));
        params.take_profit = take_profit;
      }
      if (stop_loss && stop_loss.indexOf("%") !== -1) {
        stop_loss = Number(stop_loss.replace("%", ""));
        stop_loss = 1 - (stop_loss / 100 / params.leverage);
        stop_loss = Number(params.order_type_parameter) * stop_loss;
        stop_loss = Number(stop_loss.toFixed(6));
        params.stop_loss = stop_loss;
      }
    }
    call(config, 'order/create', params, callback);
  }
  if (params.order_type === 'market') {
    return call(config, 'market/quotes', {
      symbols: params.symbol
    }, function(error, result) {
      if (error) {
        return typeof callback === "function" ? callback(error) : void 0;
      }
      if (params.direction === 'short') {
        if (take_profit && take_profit.indexOf("%") !== -1) {
          take_profit = Number(take_profit.replace("%", ""));
          take_profit = 1 - (take_profit / 100 / params.leverage);
          take_profit = Number(result.response[0].bid) * take_profit;
          take_profit = Number(take_profit.toFixed(6));
          params.take_profit = take_profit;
        }
        if (stop_loss && stop_loss.indexOf("%") !== -1) {
          stop_loss = Number(stop_loss.replace("%", ""));
          stop_loss = 1 + (stop_loss / 100 / params.leverage);
          stop_loss = Number(result.response[0].bid) * stop_loss;
          stop_loss = Number(stop_loss.toFixed(6));
          params.stop_loss = stop_loss;
        }
      }
      if (params.direction === 'long') {
        if (take_profit && take_profit.indexOf("%") !== -1) {
          take_profit = Number(take_profit.replace("%", ""));
          take_profit = 1 + (take_profit / 100 / params.leverage);
          take_profit = Number(result.response[0].ask) * take_profit;
          take_profit = Number(take_profit.toFixed(6));
          params.take_profit = take_profit;
        }
        if (stop_loss && stop_loss.indexOf("%") !== -1) {
          stop_loss = Number(stop_loss.replace("%", ""));
          stop_loss = 1 + (stop_loss / 100 / params.leverage);
          stop_loss = Number(result.response[0].ask) / stop_loss;
          stop_loss = Number(stop_loss.toFixed(6));
          params.stop_loss = stop_loss;
        }
      }
      return call(config, 'order/create', params, callback);
    });
  }
};
